--parallel_add DEVICE_FAMILY="Cyclone V" MSW_SUBTRACT="NO" PIPELINE=0 REPRESENTATION="UNSIGNED" RESULT_ALIGNMENT="LSB" SHIFT=0 SIZE=2 WIDTH=12 WIDTHR=13 data result
--VERSION_BEGIN 19.1 cbx_cycloneii 2019:09:22:11:00:28:SJ cbx_lpm_add_sub 2019:09:22:11:00:28:SJ cbx_mgl 2019:09:22:11:02:15:SJ cbx_nadder 2019:09:22:11:00:28:SJ cbx_padd 2019:09:22:11:00:28:SJ cbx_parallel_add 2019:09:22:11:00:28:SJ cbx_stratix 2019:09:22:11:00:28:SJ cbx_stratixii 2019:09:22:11:00:28:SJ cbx_util_mgl 2019:09:22:11:00:28:SJ  VERSION_END


-- Copyright (C) 2019  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.


FUNCTION soft (in)
RETURNS ( out);

--synthesis_resources = lut 26 
SUBDESIGN par_add_qne
( 
	data[23..0]	:	input;
	result[12..0]	:	output;
) 
VARIABLE
	add1_result[12..0]	:	WIRE;
	sft2a[12..0] : soft;
	sft3a[12..0] : soft;
	sft4a[12..0] : soft;
	sft5a[12..0] : soft;
	w40w	: WIRE;
	w92w[12..0]	: WIRE;

BEGIN 
	add1_result[] = sft2a[].out + sft3a[].out + sft4a[].out;
	sft2a[].in = ( w40w, ( data[11..11], ( data[10..10], ( data[9..9], ( data[8..8], ( data[7..7], ( data[6..6], ( data[5..5], ( data[4..4], ( data[3..3], ( data[2..2], ( data[1..0]))))))))))));
	sft3a[].in = ( w40w, ( data[23..23], ( data[22..22], ( data[21..21], ( data[20..20], ( data[19..19], ( data[18..18], ( data[17..17], ( data[16..16], ( data[15..15], ( data[14..14], ( data[13..12]))))))))))));
	sft4a[].in = ( w40w, ( w40w, ( w40w, ( w40w, ( w40w, ( w40w, ( w40w, ( w40w, ( w40w, ( w40w, ( w40w, ( w40w, w40w))))))))))));
	sft5a[].in = add1_result[];
	result[12..0] = w92w[12..0];
	w40w = B"0";
	w92w[] = ( sft5a[12..11].out, sft5a[10..9].out, sft5a[8..7].out, sft5a[6..5].out, sft5a[4..3].out, sft5a[2..1].out, sft5a[0..0].out);
END;
--VALID FILE
